=== [ topic ][ benefit ] ===
[ --- start ---- ]
QUICKER LAUNCH. 
    Sites that would traditionally take 12 weeks to build can commonly be
    launched inside of 6 weeks with Ruby on Rails. This time savings results
    from a few factors: a leaner code-base (fewer lines of redundant code), a
    modular design (re-using existing components rather than building everything
    from scratch), and the availability of existing plugins (again, reducing the
    need to build features from scratch).
EASIER CHANGES. 
    After site launch, future modifications to your site (e.g., adding new
    features, making changes to the data model) can be made more quickly, for
    the same reasons noted above.
MORE COST-EFFECTIVE. 
    Because of the speed with which Rails sites can be built and modified, you
    spend less money to create and maintain the website — without compromising
    the quality, performance, or scalability of your site.  In summary, while
    building Rails websites isn't "cheap" — typically the bare minimum for a
    professional-quality Rails site is $8,000 to $10,000 — for larger sites you
    do stand to gain a much better return on your investment by using Rails.

When to use Ruby on Rails
E-COMMERCE. 
    Most e-commerce sites benefit tremendously from Rails' user-friendly
    features and modular approach to site development. We can also include
    features that you would normally only find in high-end e-commerce suites,
    such as bulk uploads and updates (for product descriptions and photos,
    extremely handy when you have thousands of products), custom pricing
    algorithms, and on-the-fly photo resizing/cropping (especially handy for
    making product thumbnails for browse pages).
MEMBERSHIP SITES. 
    Membership and social networking options are pretty much "baked" into Rails.
    A variety of plugins are available to solve just about any social networking
    challenge you can think of.
CONTENT MANAGEMENT. 
    If the purpose of your site is to present thousands of articles, audio
    files, or other database-friendly content, Rails is a great solution because
    of the ease with which users will be able to navigate the site, and the ease
    with which you will be able to upload and manage the content.
CUSTOM DATABASE SOLUTIONS. 
    More and more of our new projects are custom solutions requiring a novel
    database structure to support a creative new business model. In most cases,
    Rails is an ideal way to realize build these solutions at a fraction of the
    usual time and expense.
[ ---  end  ---- ]

=== [ topic ][ when not to use ] ===
[ --- start ---- ]
A "BROCHURE" SITE. 
    Many small business owners taking their first steps on the web are looking
    for a brochure-style website that makes a good first impression, provides
    background and contact information for the company, and enables the
    business owner to update the website himself. For this kind of website,
    a better solution than Rails would be a WordPress-driven content
    management system. We build such sites regularly for our customers,
    sometimes for as little as $2,000. If this is what you need, there's no
    reason to bear the expense of creating a Ruby on Rails site.
LIMITED TO A BUDGET UNDER $8K. 
    Rails sites offer real advantages once they are set up, but getting the
    initial framework in place takes some work. In our experience, setting up a
    fully-functioning Rails site for less than $8,000 requires cutting corners
    we think shouldn't be cut. For this reason, we generally do not undertake
    building a new Rails site unless the client is comfortable with a budget of
    at least $8,000 (and preferably $10,000+).
A BLOG-CENTRIC SITE. 
    Ruby on Rails makes it easy to add a blog to a larger web site (e.g., an
    e-commerce or social networking site). But if your site is first and
    foremost a blog, then Rails is probably not the best choice; there are other
    solutions that offer more advanced features with less overhead. You would be
    better served by utilizing WordPress, for example, as your base site.

[ ---  end  ---- ]

